/*
 * Copyright (C) 2013 JFrog Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
// apply plugin: 'maven'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
	
buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		// classpath 'com.android.tools.build:gradle:1.3.0'
		classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
	}
}

group = project.property('ART_GROUP')
version = project.property('ART_VER')

allprojects {
	repositories {
		jcenter()
	}
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
            	// artifactId project.property('ART_ARTIFACT')
                packaging ART_PKG
                // Add your description here
                name project.property('PRJ_NAME')
                url project.property('PRJ_URL')
                description project.property('PRJ_DESC')
                // Set your license
                licenses {
                    license {
                        name project.property('LIC_NAME')
                        url project.property('LIC_URL')
                    }
                }
                developers {
                    developer {
                        id project.property('DEV_ID')
                        name project.property('DEV_NAME')
                        email project.property('DEV_EMAIL')
                    }
                }
                scm {
                    connection project.property('SCM_REPO')
                    // developerConnection project.property('SCM_REPO')
                    url project.property('SCM_URL')
                }
            }
        }
    }
    repositories.mavenDeployer() {
        repository(url: ART_LOCAL_URL)
        pom.groupId = ART_GROUP
        pom.artifactId = ART_ARTIFACT
        pom.version = ART_VER
    }
}

bintray {	
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	configurations = ['archives']
	pkg {
		repo = 'maven' //'generic'
		name = project.property('PRJ_NAME')
		userOrg = user
		licenses = ['Apache-2.0']
		websiteUrl = project.property('PRJ_URL')
		vcsUrl = project.property('SCM_URL')
		publish = true
		version {
			name = project.property('ART_VER')
			desc = project.property('PKG_VER_DESC')
			vcsTag = project.property('SCM_TAG')
			//attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
		}
        /*
        mavenCentralSync {
            sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
            user = 'userToken' //OSS user token
            password = 'paasword' //OSS user password
            close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
        }
       */
        // full config please visit https://github.com/bintray/gradle-bintray-plugin
    }
}
sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            //srcDir 'src'
        }
    }
}

tasks.withType(JavaCompile) { 
    sourceCompatibility = "1.6"
    targetCompatibility = "1.6" //JavaVersion.VERSION_1_5
}

tasks.withType(Jar) {
	baseName project.property('ART_ARTIFACT')
    manifest {
        attributes 'Author': 'Jamling',
                'Email': 'li.jamling@gmail.com',
                'Version': ART_VER,
                'Build-Date': new Date().dateString
    }
}

javadoc {
	// destinationDir = new File('docs/api')
	title PRJ_NAME + " " + ART_VER + " API"
}

task sourcesJar(type: Jar) {
    from 'src'
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.8'
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
}